# Скомпилированные в байтах / оптимизированные / DLL файлы
__pycache__/
.py*[код]
*$py.class

# Расширения C
*.так

# Распространение / упаковка
.Python
сборка/
развиваютсяяйцеклетки/
dist/
Загрузки/
яйца/
.яйца/
библиотека/
lib64/
части/
сдист/
var/
колеса/
поделиться/python-колеса/
.яйцо-информация*/
.установлен.cfg
*.яйцо
ПРОЯВЛЕНИЕ

# PyInstaller
# Обычно эти файлы записываются скриптом python из шаблона
# перед тем, как PyInstaller соберет exe, чтобы ввести в него дату / другую информацию.
*.манифест
*.spec

# Журналы установки
pip-log.txt
pip-delete-this-directory.txt

# Модульный тест / отчеты о покрытии
htmlcov/
.токсин/
.nox/
.освещение
.охват.*
.кэш
nosetests.xml
coverage.xml
*.обложка
*.py,обложка
.гипотеза/
.pytest_cache/
обложка/

# Переводы
*.mo
*.горшок

# Материал Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-журнал

# Материал для фляжки:
экземпляр/
.вебассеты-кэш

# Scrapy stuff:
.шершавый

# Документация Sphinx
документы/_build/

# Сборщик
.pybuilder/
цель/

# Записная книжка Юпитера
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# пьенв
# Для библиотеки или пакета вы можете игнорировать эти файлы, поскольку код
# предназначен для запуска в нескольких средах; в противном случае проверьте их в:
# .python-версия

# pipenv
# Согласно pypa/pipenv#598, рекомендуется включать Pipfile.блокировка в системе управления версиями.
# Однако, в случае совместной работы, при наличии зависимостей от конкретной платформы или
# не имея кроссплатформенной поддержки, pipenv может устанавливать зависимости, которые не работают, или не
# установите все необходимые зависимости.
#Pipfile.lock - Файл для блокировки

# поэзия
# Похоже на Pipfile.лок, обычно рекомендуется включать стихи.блокировка в системе управления версиями.
# Это особенно рекомендуется для двоичных пакетов для обеспечения воспроизводимости и является более
# обычно игнорируется для библиотек.
# https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# дпм
# Похоже на Pipfile.блокировка, обычно рекомендуется включать pdm.lock в систему управления версиями.
#pdm.lock
# pdm хранит конфигурации всего проекта в .pdm.toml, но рекомендуется не включать его
# в системе управления версиями.
# https://pdm.fming.dev/#использовать с ide
.pdm.toml

# PEP 582; используется, например github.com/David-OConnor/pyflow и github.com/pdm-project/pdm
__pypackages__/

# Начинка из сельдерея
celerybeat-расписание
celerybeat.pid

# Проанализированные файлы SageMath
*.sage.py

# Окружающая среда
.env
.венв
зав/
венв/
ЗАВ/
env.бак/
венв.бак/

# Настройки проекта Spyder
.spyderproject
.шпионский проект

# Настройки проекта Rope
.веревочный проект

# документация mkdocs
/сайт

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Проверка типа погребального костра
.погребальный костер/

# статический анализатор типов pytype
.pytype/

# Символы отладки Cython
cython_debug/

# PyCharm
# Конкретный шаблон JetBrains поддерживается в отдельном файле JetBrains.gitignore, который может
# можно найти на https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
# и может быть добавлен в глобальный gitignore или объединен в этот файл. Для более ядерного
опция# (не рекомендуется) вы можете раскомментировать следующее, чтобы игнорировать всю папку idea.
#.идея/
